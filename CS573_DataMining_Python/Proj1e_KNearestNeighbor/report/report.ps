%!PS-Adobe-3.0
%%Title: report.txt
%%For: xue
%%Creator: a2ps version 4.14
%%CreationDate: Sun Sep 22 21:24:52 2013
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 7
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.060185 def
/cw 4.236111 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 86.400000 mul
def
/ph
   520.335631 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 5 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (1. PROGRAM OUTPUT) p n
0 T (- For "weather2.csv", show the training dataset, the testing cases, the sorted d) N
0 T (isplayed distance, and the determined majority class \(k = 5\)) N
0 T (================================================================================) N
0 T (Group:1) N
(5) # (Training Set) N
0 T (        outlook,  $temperature,     $humidity,         windy,         =play,  # ) N
0 T (notes ) N
0 T (#         sunny,         73.14,         85.14,         FALSE,           yes,  # ) N
0 T (expected) N
0 T (#          0.43,          5.24,         10.17,          0.71,          0.71,  # ) N
0 T (certainty) N
0 T (          sunny,            80,            90,          TRUE,            no,  # ) N
0 T (      ) N
(10) # (          sunny,            69,            70,         FALSE,           yes,  # ) N
0 T (      ) N
0 T (          sunny,            72,            95,         FALSE,            no,  # ) N
0 T (      ) N
0 T (       overcast,            72,            90,          TRUE,           yes,  # ) N
0 T (      ) N
0 T (          rainy,            68,            80,         FALSE,           yes,  # ) N
0 T (      ) N
0 T (          rainy,            70,            96,         FALSE,           yes,  # ) N
0 T (      ) N
(15) # (       overcast,            81,            75,         FALSE,           yes,  # ) N
0 T (      ) N
0 T () N
0 T (>Test Case: sunny,  75,  70,TRUE, yes,) N
0 T (1 0.34 sunny,  80,  90,TRUE,  no,) N
0 T (2 0.52 sunny,  69,  70,FALSE, yes,) N
(20) # (3 0.60 overcast,  72,  90,TRUE, yes,) N
0 T (4 0.65 sunny,  72,  95,FALSE,  no,) N
0 T (5 0.73 overcast,  81,  75,FALSE, yes,) N
0 T (6 0.74 rainy,  68,  80,FALSE, yes,) N
0 T (7 0.83 rainy,  70,  96,FALSE, yes,) N
(25) # (want: yes  got: yes) N
0 T () N
0 T (>Test Case: rainy,  75,  80,FALSE, yes,) N
0 T (1 0.17 rainy,  68,  80,FALSE, yes,) N
0 T (2 0.28 rainy,  70,  96,FALSE, yes,) N
(30) # (3 0.53 overcast,  81,  75,FALSE, yes,) N
0 T (4 0.54 sunny,  69,  70,FALSE, yes,) N
0 T (5 0.56 sunny,  72,  95,FALSE,  no,) N
0 T (6 0.73 overcast,  72,  90,TRUE, yes,) N
0 T (7 0.73 sunny,  80,  90,TRUE,  no,) N
(35) # (want: yes  got: yes) N
0 T () N
0 T (>Test Case: rainy,  71,  91,TRUE,  no,) N
0 T (1 0.50 overcast,  72,  90,TRUE, yes,) N
0 T (2 0.51 rainy,  70,  96,FALSE, yes,) N
(40) # (3 0.54 rainy,  68,  80,FALSE, yes,) N
0 T (4 0.54 sunny,  80,  90,TRUE,  no,) N
0 T (5 0.71 sunny,  72,  95,FALSE,  no,) N
0 T (6 0.79 sunny,  69,  70,FALSE, yes,) N
0 T (7 0.79 overcast,  81,  75,FALSE, yes,) N
(45) # (want: no  got: yes) N
0 T () N
0 T (>Test Case: overcast,  83,  86,FALSE, yes,) N
0 T (1 0.18 overcast,  81,  75,FALSE, yes,) N
0 T (2 0.57 overcast,  72,  90,TRUE, yes,) N
(50) # (3 0.58 sunny,  72,  95,FALSE,  no,) N
0 T (4 0.61 rainy,  70,  96,FALSE, yes,) N
0 T (5 0.62 rainy,  68,  80,FALSE, yes,) N
0 T (6 0.65 sunny,  69,  70,FALSE, yes,) N
0 T (7 0.71 sunny,  80,  90,TRUE,  no,) N
(55) # (want: yes  got: yes) N
0 T () N
0 T (>Test Case: sunny,  85,  85,FALSE,  no,) N
0 T (1 0.35 sunny,  72,  95,FALSE,  no,) N
0 T (2 0.45 sunny,  69,  70,FALSE, yes,) N
(60) # (3 0.52 sunny,  80,  90,TRUE,  no,) N
0 T (4 0.53 overcast,  81,  75,FALSE, yes,) N
0 T (5 0.64 rainy,  70,  96,FALSE, yes,) N
(CS573:Proj1e:Knn_XUE YANG) (Page 1/13) (Sep 22, 13 21:24) title
border
/v 1 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (6 0.65 rainy,  68,  80,FALSE, yes,) p n
0 T (7 0.78 overcast,  72,  90,TRUE, yes,) N
(65) # (want: no  got: yes) N
0 T () N
0 T (>Test Case: overcast,  64,  65,TRUE, yes,) N
0 T (1 0.45 overcast,  72,  90,TRUE, yes,) N
0 T (2 0.66 overcast,  81,  75,FALSE, yes,) N
(70) # (3 0.72 sunny,  69,  70,FALSE, yes,) N
0 T (4 0.75 sunny,  80,  90,TRUE,  no,) N
0 T (5 0.75 rainy,  68,  80,FALSE, yes,) N
0 T (6 0.88 rainy,  70,  96,FALSE, yes,) N
0 T (7 0.88 sunny,  72,  95,FALSE,  no,) N
(75) # (want: yes  got: yes) N
0 T () N
0 T (>Test Case: rainy,  65,  70,TRUE,  no,) N
0 T (1 0.53 rainy,  68,  80,FALSE, yes,) N
0 T (2 0.62 overcast,  72,  90,TRUE, yes,) N
(80) # (3 0.66 rainy,  70,  96,FALSE, yes,) N
0 T (4 0.69 sunny,  80,  90,TRUE,  no,) N
0 T (5 0.71 sunny,  69,  70,FALSE, yes,) N
0 T (6 0.81 overcast,  81,  75,FALSE, yes,) N
0 T (7 0.83 sunny,  72,  95,FALSE,  no,) N
(85) # (want: no  got: yes) N
0 T (================================================================================) N
0 T (Group:2) N
0 T (Training Set ) N
0 T (        outlook,  $temperature,     $humidity,         windy,         =play,  # ) N
0 T (notes ) N
(90) # (#         rainy,         74.00,         78.14,          TRUE,           yes,  # ) N
0 T (expected) N
0 T (#          0.43,          8.10,          9.86,          0.57,          0.57,  # ) N
0 T (certainty) N
0 T (          sunny,            75,            70,          TRUE,           yes,  # ) N
0 T (      ) N
0 T (          rainy,            75,            80,         FALSE,           yes,  # ) N
0 T (      ) N
0 T (          rainy,            71,            91,          TRUE,            no,  # ) N
0 T (      ) N
(95) # (       overcast,            83,            86,         FALSE,           yes,  # ) N
0 T (      ) N
0 T (          sunny,            85,            85,         FALSE,            no,  # ) N
0 T (      ) N
0 T (       overcast,            64,            65,          TRUE,           yes,  # ) N
0 T (      ) N
0 T (          rainy,            65,            70,          TRUE,            no,  # ) N
0 T (      ) N
0 T () N
(100) # (>Test Case: sunny,  80,  90,TRUE,  no,) N
0 T (1 0.34 sunny,  75,  70,TRUE, yes,) N
0 T (2 0.52 sunny,  85,  85,FALSE,  no,) N
0 T (3 0.54 rainy,  71,  91,TRUE,  no,) N
0 T (4 0.69 rainy,  65,  70,TRUE,  no,) N
(105) # (5 0.71 overcast,  83,  86,FALSE, yes,) N
0 T (6 0.73 rainy,  75,  80,FALSE, yes,) N
0 T (7 0.75 overcast,  64,  65,TRUE, yes,) N
0 T (want: no  got: no) N
0 T () N
(110) # (>Test Case: sunny,  69,  70,FALSE, yes,) N
0 T (1 0.45 sunny,  85,  85,FALSE,  no,) N
0 T (2 0.52 sunny,  75,  70,TRUE, yes,) N
0 T (3 0.54 rainy,  75,  80,FALSE, yes,) N
0 T (4 0.65 overcast,  83,  86,FALSE, yes,) N
(115) # (5 0.71 rainy,  65,  70,TRUE,  no,) N
0 T (6 0.72 overcast,  64,  65,TRUE, yes,) N
0 T (7 0.79 rainy,  71,  91,TRUE,  no,) N
0 T (want: yes  got: yes) N
0 T () N
(120) # (>Test Case: sunny,  72,  95,FALSE,  no,) N
0 T (1 0.35 sunny,  85,  85,FALSE,  no,) N
0 T (2 0.56 rainy,  75,  80,FALSE, yes,) N
0 T (3 0.58 overcast,  83,  86,FALSE, yes,) N
0 T (4 0.65 sunny,  75,  70,TRUE, yes,) N
(125) # (5 0.71 rainy,  71,  91,TRUE,  no,) N
(CS573:Proj1e:Knn_XUE YANG) (Page 2/13) (Sep 22, 13 21:24) title
border
grestore
(Printed by xue) rhead
(report.txt) (1/7) (Sunday September 22, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (6 0.83 rainy,  65,  70,TRUE,  no,) p n
0 T (7 0.88 overcast,  64,  65,TRUE, yes,) N
0 T (want: no  got: yes) N
0 T () N
(130) # (>Test Case: overcast,  72,  90,TRUE, yes,) N
0 T (1 0.45 overcast,  64,  65,TRUE, yes,) N
0 T (2 0.50 rainy,  71,  91,TRUE,  no,) N
0 T (3 0.57 overcast,  83,  86,FALSE, yes,) N
0 T (4 0.60 sunny,  75,  70,TRUE, yes,) N
(135) # (5 0.62 rainy,  65,  70,TRUE,  no,) N
0 T (6 0.73 rainy,  75,  80,FALSE, yes,) N
0 T (7 0.78 sunny,  85,  85,FALSE,  no,) N
0 T (want: yes  got: yes) N
0 T () N
(140) # (>Test Case: rainy,  68,  80,FALSE, yes,) N
0 T (1 0.17 rainy,  75,  80,FALSE, yes,) N
0 T (2 0.53 rainy,  65,  70,TRUE,  no,) N
0 T (3 0.54 rainy,  71,  91,TRUE,  no,) N
0 T (4 0.62 overcast,  83,  86,FALSE, yes,) N
(145) # (5 0.65 sunny,  85,  85,FALSE,  no,) N
0 T (6 0.74 sunny,  75,  70,TRUE, yes,) N
0 T (7 0.75 overcast,  64,  65,TRUE, yes,) N
0 T (want: yes  got: no) N
0 T () N
(150) # (>Test Case: rainy,  70,  96,FALSE, yes,) N
0 T (1 0.28 rainy,  75,  80,FALSE, yes,) N
0 T (2 0.51 rainy,  71,  91,TRUE,  no,) N
0 T (3 0.61 overcast,  83,  86,FALSE, yes,) N
0 T (4 0.64 sunny,  85,  85,FALSE,  no,) N
(155) # (5 0.66 rainy,  65,  70,TRUE,  no,) N
0 T (6 0.83 sunny,  75,  70,TRUE, yes,) N
0 T (7 0.88 overcast,  64,  65,TRUE, yes,) N
0 T (want: yes  got: no) N
0 T () N
(160) # (>Test Case: overcast,  81,  75,FALSE, yes,) N
0 T (1 0.18 overcast,  83,  86,FALSE, yes,) N
0 T (2 0.53 rainy,  75,  80,FALSE, yes,) N
0 T (3 0.53 sunny,  85,  85,FALSE,  no,) N
0 T (4 0.66 overcast,  64,  65,TRUE, yes,) N
(165) # (5 0.73 sunny,  75,  70,TRUE, yes,) N
0 T (6 0.79 rainy,  71,  91,TRUE,  no,) N
0 T (7 0.81 rainy,  65,  70,TRUE,  no,) N
0 T (want: yes  got: yes) N
0 T (================================================================================) N
(170) # (Group:3) N
0 T (Training Set ) N
0 T (        outlook,  $temperature,     $humidity,         windy,         =play,  # ) N
0 T (notes ) N
0 T (#         rainy,         72.71,         84.43,          TRUE,           yes,  # ) N
0 T (expected) N
0 T (#          0.43,          4.68,         11.13,          0.57,          0.57,  # ) N
0 T (certainty) N
(175) # (          sunny,            75,            70,          TRUE,           yes,  # ) N
0 T (      ) N
0 T (          rainy,            70,            96,         FALSE,           yes,  # ) N
0 T (      ) N
0 T (          sunny,            80,            90,          TRUE,            no,  # ) N
0 T (      ) N
0 T (          rainy,            65,            70,          TRUE,            no,  # ) N
0 T (      ) N
0 T (       overcast,            72,            90,          TRUE,           yes,  # ) N
0 T (      ) N
(180) # (          rainy,            75,            80,         FALSE,           yes,  # ) N
0 T (      ) N
0 T (          sunny,            72,            95,         FALSE,            no,  # ) N
0 T (      ) N
0 T () N
0 T (>Test Case: rainy,  71,  91,TRUE,  no,) N
0 T (1 0.37 rainy,  65,  70,TRUE,  no,) N
(185) # (2 0.50 overcast,  72,  90,TRUE, yes,) N
0 T (3 0.51 rainy,  70,  96,FALSE, yes,) N
0 T (4 0.54 rainy,  75,  80,FALSE, yes,) N
0 T (5 0.54 sunny,  80,  90,TRUE,  no,) N
(CS573:Proj1e:Knn_XUE YANG) (Page 3/13) (Sep 22, 13 21:24) title
border
/v 1 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (6 0.61 sunny,  75,  70,TRUE, yes,) p n
(190) # (7 0.71 sunny,  72,  95,FALSE,  no,) N
0 T (want: no  got: yes) N
0 T () N
0 T (>Test Case: sunny,  69,  70,FALSE, yes,) N
0 T (1 0.41 sunny,  72,  95,FALSE,  no,) N
(195) # (2 0.52 sunny,  75,  70,TRUE, yes,) N
0 T (3 0.54 rainy,  75,  80,FALSE, yes,) N
0 T (4 0.65 sunny,  80,  90,TRUE,  no,) N
0 T (5 0.65 rainy,  70,  96,FALSE, yes,) N
0 T (6 0.71 rainy,  65,  70,TRUE,  no,) N
(200) # (7 0.78 overcast,  72,  90,TRUE, yes,) N
0 T (want: yes  got: yes) N
0 T () N
0 T (>Test Case: overcast,  64,  65,TRUE, yes,) N
0 T (1 0.45 overcast,  72,  90,TRUE, yes,) N
(205) # (2 0.51 rainy,  65,  70,TRUE,  no,) N
0 T (3 0.57 sunny,  75,  70,TRUE, yes,) N
0 T (4 0.75 sunny,  80,  90,TRUE,  no,) N
0 T (5 0.79 rainy,  75,  80,FALSE, yes,) N
0 T (6 0.88 rainy,  70,  96,FALSE, yes,) N
(210) # (7 0.88 sunny,  72,  95,FALSE,  no,) N
0 T (want: yes  got: yes) N
0 T () N
0 T (>Test Case: overcast,  81,  75,FALSE, yes,) N
0 T (1 0.53 rainy,  75,  80,FALSE, yes,) N
(215) # (2 0.60 overcast,  72,  90,TRUE, yes,) N
0 T (3 0.63 sunny,  72,  95,FALSE,  no,) N
0 T (4 0.66 rainy,  70,  96,FALSE, yes,) N
0 T (5 0.73 sunny,  75,  70,TRUE, yes,) N
0 T (6 0.75 sunny,  80,  90,TRUE,  no,) N
(220) # (7 0.81 rainy,  65,  70,TRUE,  no,) N
0 T (want: yes  got: yes) N
0 T () N
0 T (>Test Case: rainy,  68,  80,FALSE, yes,) N
0 T (1 0.17 rainy,  75,  80,FALSE, yes,) N
(225) # (2 0.26 rainy,  70,  96,FALSE, yes,) N
0 T (3 0.53 rainy,  65,  70,TRUE,  no,) N
0 T (4 0.56 sunny,  72,  95,FALSE,  no,) N
0 T (5 0.73 overcast,  72,  90,TRUE, yes,) N
0 T (6 0.74 sunny,  75,  70,TRUE, yes,) N
(230) # (7 0.78 sunny,  80,  90,TRUE,  no,) N
0 T (want: yes  got: yes) N
0 T () N
0 T (>Test Case: sunny,  85,  85,FALSE,  no,) N
0 T (1 0.35 sunny,  72,  95,FALSE,  no,) N
(235) # (2 0.52 sunny,  80,  90,TRUE,  no,) N
0 T (3 0.56 rainy,  75,  80,FALSE, yes,) N
0 T (4 0.60 sunny,  75,  70,TRUE, yes,) N
0 T (5 0.64 rainy,  70,  96,FALSE, yes,) N
0 T (6 0.78 overcast,  72,  90,TRUE, yes,) N
(240) # (7 0.89 rainy,  65,  70,TRUE,  no,) N
0 T (want: no  got: yes) N
0 T () N
0 T (>Test Case: overcast,  83,  86,FALSE, yes,) N
0 T (1 0.54 rainy,  75,  80,FALSE, yes,) N
(245) # (2 0.57 overcast,  72,  90,TRUE, yes,) N
0 T (3 0.58 sunny,  72,  95,FALSE,  no,) N
0 T (4 0.61 rainy,  70,  96,FALSE, yes,) N
0 T (5 0.71 sunny,  80,  90,TRUE,  no,) N
0 T (6 0.78 sunny,  75,  70,TRUE, yes,) N
(250) # (7 0.87 rainy,  65,  70,TRUE,  no,) N
0 T (want: yes  got: yes) N
0 T (================================================================================) N
0 T (Group:4) N
0 T (Training Set ) N
(255) # (        outlook,  $temperature,     $humidity,         windy,         =play,  # ) N
0 T (notes ) N
0 T (#      overcast,         74.43,         78.86,         FALSE,           yes,  # ) N
0 T (expected) N
0 T (#          0.43,          8.36,          9.34,          0.71,          0.71,  # ) N
0 T (certainty) N
0 T (          rainy,            71,            91,          TRUE,            no,  # ) N
(CS573:Proj1e:Knn_XUE YANG) (Page 4/13) (Sep 22, 13 21:24) title
border
grestore
(Printed by xue) rhead
(report.txt) (2/7) (Sunday September 22, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (      ) p n
0 T (          sunny,            69,            70,         FALSE,           yes,  # ) N
0 T (      ) N
(260) # (       overcast,            64,            65,          TRUE,           yes,  # ) N
0 T (      ) N
0 T (       overcast,            81,            75,         FALSE,           yes,  # ) N
0 T (      ) N
0 T (          rainy,            68,            80,         FALSE,           yes,  # ) N
0 T (      ) N
0 T (          sunny,            85,            85,         FALSE,            no,  # ) N
0 T (      ) N
0 T (       overcast,            83,            86,         FALSE,           yes,  # ) N
0 T (      ) N
(265) # () N
0 T (>Test Case: sunny,  75,  70,TRUE, yes,) N
0 T (1 0.52 sunny,  69,  70,FALSE, yes,) N
0 T (2 0.57 overcast,  64,  65,TRUE, yes,) N
0 T (3 0.60 sunny,  85,  85,FALSE,  no,) N
(270) # (4 0.61 rainy,  71,  91,TRUE,  no,) N
0 T (5 0.73 overcast,  81,  75,FALSE, yes,) N
0 T (6 0.74 rainy,  68,  80,FALSE, yes,) N
0 T (7 0.78 overcast,  83,  86,FALSE, yes,) N
0 T (want: yes  got: yes) N
(275) # () N
0 T (>Test Case: rainy,  70,  96,FALSE, yes,) N
0 T (1 0.26 rainy,  68,  80,FALSE, yes,) N
0 T (2 0.51 rainy,  71,  91,TRUE,  no,) N
0 T (3 0.61 overcast,  83,  86,FALSE, yes,) N
(280) # (4 0.64 sunny,  85,  85,FALSE,  no,) N
0 T (5 0.65 sunny,  69,  70,FALSE, yes,) N
0 T (6 0.66 overcast,  81,  75,FALSE, yes,) N
0 T (7 0.88 overcast,  64,  65,TRUE, yes,) N
0 T (want: yes  got: yes) N
(285) # () N
0 T (>Test Case: sunny,  80,  90,TRUE,  no,) N
0 T (1 0.52 sunny,  85,  85,FALSE,  no,) N
0 T (2 0.54 rainy,  71,  91,TRUE,  no,) N
0 T (3 0.65 sunny,  69,  70,FALSE, yes,) N
(290) # (4 0.71 overcast,  83,  86,FALSE, yes,) N
0 T (5 0.75 overcast,  64,  65,TRUE, yes,) N
0 T (6 0.75 overcast,  81,  75,FALSE, yes,) N
0 T (7 0.78 rainy,  68,  80,FALSE, yes,) N
0 T (want: no  got: yes) N
(295) # () N
0 T (>Test Case: rainy,  65,  70,TRUE,  no,) N
0 T (1 0.37 rainy,  71,  91,TRUE,  no,) N
0 T (2 0.51 overcast,  64,  65,TRUE, yes,) N
0 T (3 0.53 rainy,  68,  80,FALSE, yes,) N
(300) # (4 0.71 sunny,  69,  70,FALSE, yes,) N
0 T (5 0.81 overcast,  81,  75,FALSE, yes,) N
0 T (6 0.87 overcast,  83,  86,FALSE, yes,) N
0 T (7 0.89 sunny,  85,  85,FALSE,  no,) N
0 T (want: no  got: yes) N
(305) # () N
0 T (>Test Case: overcast,  72,  90,TRUE, yes,) N
0 T (1 0.45 overcast,  64,  65,TRUE, yes,) N
0 T (2 0.50 rainy,  71,  91,TRUE,  no,) N
0 T (3 0.57 overcast,  83,  86,FALSE, yes,) N
(310) # (4 0.60 overcast,  81,  75,FALSE, yes,) N
0 T (5 0.73 rainy,  68,  80,FALSE, yes,) N
0 T (6 0.78 sunny,  85,  85,FALSE,  no,) N
0 T (7 0.78 sunny,  69,  70,FALSE, yes,) N
0 T (want: yes  got: yes) N
(315) # () N
0 T (>Test Case: rainy,  75,  80,FALSE, yes,) N
0 T (1 0.17 rainy,  68,  80,FALSE, yes,) N
0 T (2 0.53 overcast,  81,  75,FALSE, yes,) N
0 T (3 0.54 rainy,  71,  91,TRUE,  no,) N
(320) # (4 0.54 overcast,  83,  86,FALSE, yes,) N
0 T (5 0.54 sunny,  69,  70,FALSE, yes,) N
0 T (6 0.56 sunny,  85,  85,FALSE,  no,) N
0 T (7 0.79 overcast,  64,  65,TRUE, yes,) N
0 T (want: yes  got: yes) N
(CS573:Proj1e:Knn_XUE YANG) (Page 5/13) (Sep 22, 13 21:24) title
border
/v 1 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(325) # () p n
0 T (>Test Case: sunny,  72,  95,FALSE,  no,) N
0 T (1 0.35 sunny,  85,  85,FALSE,  no,) N
0 T (2 0.41 sunny,  69,  70,FALSE, yes,) N
0 T (3 0.56 rainy,  68,  80,FALSE, yes,) N
(330) # (4 0.58 overcast,  83,  86,FALSE, yes,) N
0 T (5 0.63 overcast,  81,  75,FALSE, yes,) N
0 T (6 0.71 rainy,  71,  91,TRUE,  no,) N
0 T (7 0.88 overcast,  64,  65,TRUE, yes,) N
0 T (want: no  got: yes) N
(335) # (knn_acc = ['57.14', '57.14', '71.43', '57.14']) N
0 T () N
0 T () N
0 T (-  Show 2*2 xval results for k=5nn and nb for soybean, diabetes.) N
0 T (   1\). Diabetes) N
(340) # (       > 5nn : ['74.74', '69.27', '72.14', '72.66']) N
0 T (       > nb  : ['76.30', '72.92', '76.82', '74.48']) N
0 T (   2\). Soybean) N
0 T (       > 5nn : ['86.22', '87.10', '89.44', '87.68']) N
0 T (       > nb  : ['86.51', '90.62', '91.50', '83.87']) N
(345) # () N
0 T (2. SOURCE CODE) N
0 T (*************************************************************) N
0 T (File <dist.py>) N
0 T () N
(350) # (import lib) N
0 T () N
0 T (def dist\(this, that, lst, table\):) N
0 T (    sum = 0.0    ) N
0 T (    for k in lst:) N
(355) # (        v1 = this[k]) N
0 T (        v2 = that[k]) N
0 T (        if v1 == '?' and v2 == '?': sum += 1) N
0 T (        elif k in table.nump:            ) N
0 T (            i = table.nump.index\(k\)) N
(360) # (            #print table.lo[i], table.hi[i]) N
0 T (            aLittle = 10**-7) N
0 T (            if v1 == '?': v1 = 1.0 if v2 < 0.5 else 0.0             ) N
0 T (            else: ) N
0 T (                v1 = \(float\(v1\) - float\(table.lo[i]\)\)/\(float\(table.hi[i]\) - floa) N
0 T (t\(table.lo[i]\) + aLittle\)) N
(365) # (            if v2 == '?': v2 = 1.0 if v1 < 0.5 else 0.0) N
0 T (            else:) N
0 T (                v2 = \(float\(v2\) - float\(table.lo[i]\)\)/\(float\(table.hi[i]\) - floa) N
0 T (t\(table.lo[i]\) + aLittle\)) N
0 T (            sum += \(float\(v2\) -float\(v1\)\)**2) N
0 T (        else:) N
(370) # (            if v1 == '?': sum += 1.0) N
0 T (            elif v2 == '?': sum += 1.0) N
0 T (            elif v1 != v2: sum +=1.0) N
0 T (            else: sum += 0.0) N
0 T (    return sum**0.5/len\(lst\)**0.5) N
(375) # (    ) N
0 T (def closest\(i, table\):) N
0 T (    minval = lib.INF) N
0 T (    this = [table.data[i][s] for s in range\(len\(table.data\)\)]) N
0 T (    for j in range\(len\(table.data[0]\)\):) N
(380) # (        if i == j: continue) N
0 T (        that = [table.data[j][s] for s in range\(len\(table.data\)\)]) N
0 T (        d = dist\(this, that, table.indep, table\)) N
0 T (        if d < minval: minval = d; out = j      ) N
0 T (    return out) N
(385) # (    ) N
0 T (def furthest\(i, table\):) N
0 T (    maxval = lib.NINF) N
0 T (    this = [table.data[i][s] for s in range\(len\(table.data\)\)]) N
0 T (    for j in range\(len\(table.data[0]\)\):) N
(390) # (        if i == j: continue) N
0 T (        that = [table.data[j][s] for s in range\(len\(table.data\)\)]) N
0 T (        d = dist\(this, that, table.indep, table\)) N
0 T (        if d > maxval: maxval = d; out = j      ) N
0 T (    return out) N
(395) # (*************************************************************) N
(CS573:Proj1e:Knn_XUE YANG) (Page 6/13) (Sep 22, 13 21:24) title
border
grestore
(Printed by xue) rhead
(report.txt) (3/7) (Sunday September 22, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (File <knn.py>) p n
0 T () N
0 T (import reader) N
0 T (import dist) N
(400) # (import xval) N
0 T (import lib) N
0 T (import tablestr) N
0 T () N
0 T (def knn\(testT, trainT, tables, kn\):) N
(405) # (    tablestr.tableprint\(trainT['0']\)) N
0 T (    k = testT['0'].klass[0]) N
0 T (    acc = 0.0) N
0 T (    for d in range\(len\(testT['0'].data[0]\)\):) N
0 T (        want = testT['0'].data[k][d]) N
(410) # (        row = [testT['0'].data[s][d] for s in range\(len\(testT['0'].data\)\)]      ) N
0 T (  ) N
0 T (        got = knn1\(row, trainT, tables, kn\)) N
0 T (        acc += want == got) N
0 T (        print 'want:', want, ' got:', got) N
0 T (    return 100 * float\(acc/len\(testT['0'].data[0]\)\)) N
(415) # (    ) N
0 T (def knn1\(this, trainT, tables, kn\):) N
0 T (    kmax = neighbors\(this, trainT, tables\)) N
0 T (    #print '\\n>Test Case: ' + lib.rowprint\(this, 5\)) N
0 T (    for k in range\(len\(kmax\)\):) N
(420) # (        that = [trainT['0'].data[s][int\(kmax[k][0]\)] for s in range\(len\(trainT[') N
0 T (0'].data\)\)]) N
0 T (        print k+1, tables['0'].CONVFMT%float\(kmax[k][1]\), lib.rowprint\(that, 5\)) N
0 T (    seen = nearestk\(this, kn, trainT, kmax\)) N
0 T (    return mostSeen\(seen\)) N
0 T (    ) N
(425) # (def neighbors\(this, trainT, tables\):) N
0 T (    lst = {}) N
0 T (    for d in range\(len\(trainT['0'].data[0]\)\):) N
0 T (        that = [trainT['0'].data[s][d] for s in range\(len\(trainT['0'].data\)\)]) N
0 T (        lst[d] = dist.dist\(this, that, range\(len\(trainT['0'].data\)-1\), tables['0) N
0 T (']\)) N
(430) # (    return sorted\(lst.items\(\), key=lambda d:d[1]\)) N
0 T (        ) N
0 T (def nearestk\(this, kn, trainT, lst\):) N
0 T (    k = trainT['0'].klass[0]  # get index for class) N
0 T (    seen = {}    ) N
(435) # (    for i in range\(kn\):) N
0 T (        that = int\(lst[i][0]\)) N
0 T (        got = trainT['0'].data[k][that]  ) N
0 T (        if got in seen.keys\(\):  seen[got] += 1) N
0 T (        else: seen[got] = 0) N
(440) # (    return seen) N
0 T (     ) N
0 T (def mostSeen\(seen\):) N
0 T (    maxval = 0) N
0 T (    out = seen.keys\(\)[0]) N
(445) # (    for s in seen.keys\(\):) N
0 T (        if seen[s] > maxval: maxval = seen[s]; out = s) N
0 T (    return out) N
0 T (*************************************************************) N
0 T (File <uxval.py>) N
(450) # () N
0 T (import lib) N
0 T (import reader) N
0 T (import tablestr) N
0 T (import random) N
(455) # () N
0 T (def uxvals\(tables, x, b\):) N
0 T (    rows = lib.indexes\(tables['0'].data[0]\)) N
0 T (    s = int\(len\(rows\)/b\)) N
0 T (    uxvaltables = {}) N
(460) # (    for i in range\(x\):      # x times) N
0 T (        random.shuffle\(rows\)) N
0 T (        for b1 in range\(b\): # b bins) N
0 T (            obj = uxval\(b1*s, \(b1+1\)*s, rows, tables\)) N
0 T (            uxvaltables[i*x+b1+1] = obj) N
(465) # (    return uxvaltables) N
(CS573:Proj1e:Knn_XUE YANG) (Page 7/13) (Sep 22, 13 21:24) title
border
/v 1 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (     ) p n
0 T (       ) N
0 T (def uxval\(start, stop, rows, tables\):) N
0 T (    testT = tablestr.Table\(\)) N
(470) # (    trainT = tablestr.Table\(\)) N
0 T (    reader.makeTable\(tables['0'].name, testT\)) N
0 T (    reader.makeTable\(tables['0'].name, trainT\)) N
0 T (    for r in range\(len\(rows\)\):) N
0 T (        d = rows[r]) N
(475) # (        a = []) N
0 T (        for j in range\(len\(tables['0'].order\)\):) N
0 T (            a.append\(tables['0'].data[j][d]\)        ) N
0 T (        if r >= start and r < stop: #belonging to testing data set) N
0 T (            reader.addRow\(a, testT\)) N
(480) # (        else:) N
0 T (            reader.addRow\(a, trainT\)) N
0 T (    test = {}) N
0 T (    train = {}) N
0 T (    test['0'] = testT) N
(485) # (    train['0'] = trainT) N
0 T (    tables = {}) N
0 T (    tables['train'] = train) N
0 T (    tables['test'] = test) N
0 T (    return tables) N
(490) # (*************************************************************) N
0 T (File <lib.py>) N
0 T () N
0 T (import math) N
0 T (inf = 10^17) N
(495) # (NINF = -1 * inf) N
0 T (PINCH = 1 / inf) N
0 T (PI = 3.1415926535) N
0 T (EE = 2.7182818284) N
0 T () N
(500) # (def indexes\(data\):) N
0 T (    rows = []   #get the indexes for the data) N
0 T (    for i in range\(len\(data\)\):) N
0 T (        rows.append\(i\)) N
0 T (    return rows) N
(505) # () N
0 T (def rowprint\(a\):) N
0 T (    max = len\(a\)) N
0 T (    line = '') N
0 T (    for j in range\(max\):) N
(510) # (        line += \(a[j] + ','\).rjust\(15\)) N
0 T (    return line) N
0 T (    ) N
0 T (def maybeInt\(x\):) N
0 T (    return int\(x\) if x % 1 == 0.0 else float\(x\)) N
(515) # (    ) N
0 T (def norm\(x, m, s\):) N
0 T (    s += PINCH) N
0 T (    return 1/math.sqrt\(2*PI*s**2.0\)*EE**\(-1*\(x-m\)**2.0/\(2*s**2.0\)\)) N
0 T (*************************************************************) N
(520) # (File <nb.py>) N
0 T () N
0 T (import lib) N
0 T () N
0 T (def nb\(testT, trainT, hypotheses, k, m\):) N
(525) # (    ck = testT['0'].klass[0] #locate the index for class col) N
0 T (    total = acc = 0.0    ) N
0 T (    total += len\(trainT['0'].data[ck]\)) N
0 T (    for t in range\(len\(testT['0'].data[ck]\)\):) N
0 T (        want = testT['0'].data[ck][t]) N
(530) # (        row = []) N
0 T (        for i in range\(len\(testT['0'].data\)\):) N
0 T (            row += [testT['0'].data[i][t]]) N
0 T (        got = likelihood\(row, trainT, total, hypotheses, k, m\)) N
0 T (        acc += want == got) N
(535) # (    return 100 * acc/len\(testT['0'].data[ck]\)) N
0 T (    ) N
0 T (def likelihood\(row, trainT, total, hypotheses, k, m\):) N
0 T (    like = lib.NINF) N
(CS573:Proj1e:Knn_XUE YANG) (Page 8/13) (Sep 22, 13 21:24) title
border
grestore
(Printed by xue) rhead
(report.txt) (4/7) (Sunday September 22, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9-10) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (    total += k * len\(hypotheses\)) p n
(540) # (    best = '') N
0 T (    for h in hypotheses:) N
0 T (        nh = len\(trainT[h].data[trainT['0'].klass[0]]\)) N
0 T (        prior = float\(nh + k\)/total) N
0 T (        tmp = prior) N
(545) # (        for c in trainT[h].nump:) N
0 T (            i = trainT[h].nump.index\(c\)) N
0 T (            x = row[c]) N
0 T (            if x == "?": continue) N
0 T (            y = lib.norm\(float\(x\), float\(trainT[h].mu[i]\), float\(trainT[h].sd[i]) N
0 T (\)\)) N
(550) # (            tmp *= y) N
0 T (        for c in trainT[h].term:) N
0 T (            x = row[c]) N
0 T (            if x == "?": continue) N
0 T (            y = 0.0) N
(555) # (            for i in range\(len\(trainT[h].data[c]\)\):) N
0 T (                if trainT[h].data[c][i] == x: y+= 1) N
0 T (            tmp *= \(y + m*prior\) / \(nh +m\)) N
0 T (        if tmp >= like: ) N
0 T (            like = tmp) N
(560) # (            best = h) N
0 T (    return best) N
0 T (*************************************************************) N
0 T (File <reader.py>   ) N
0 T () N
(565) # (import re) N
0 T (import tablestr) N
0 T (def readcsv\(filename, table\):) N
0 T (    "read in data from csv and create a table") N
0 T (    FS = ','                     #define field separator) N
(570) # (    f = open\(filename\)) N
0 T (    seen  = 0) N
0 T (    while True:) N
0 T (        str = line\(f\)) N
0 T (        if str == -1:) N
(575) # (            if seen == 0: print\("WARNING: empty or missing file"\)) N
0 T (            return -1) N
0 T (        a = str.split\(FS\)        #compute the number of attributes in table) N
0 T (        if len\(a\) > 1:) N
0 T (            if seen: addRow\(a, table\)) N
(580) # (            else: makeTable\(a, table\)) N
0 T (            seen += 1) N
0 T (    ) N
0 T (def line\(f\):) N
0 T (    "get one line data \(without comments and whitespace\)") N
(585) # (    str = f.readline\(\)) N
0 T (    if not str: return -1             #readline finds nothing, output error) N
0 T (    else:) N
0 T (        str = "".join\(str.split\(\)\)    #kill whitespace) N
0 T (        str = re.sub\(r'#.*','',str\)   #kill comments    ) N
(590) # (        if len\(str\) >= 1 and str[-1] == ',': return str + line\(f\)) N
0 T (        else: return str) N
0 T (            ) N
0 T (def makeTable\(a, table\):) N
0 T (    "read table titles and set all corresponding parameters") N
(595) # (    c = 0) N
0 T (    for ite in range\(len\(a\)\):) N
0 T (        if a[ite][0] == '?': continue  #the col with '?' is ignored    ) N
0 T (        table.order.append\(ite\)) N
0 T (        x = a[ite]) N
(600) # (        table.name.append\(x\)) N
0 T (        isNum = 1) N
0 T (        if x.find\('='\) != -1:) N
0 T (            table.dep.append\(c\)) N
0 T (            table.klass.append\(c\)) N
(605) # (            isNum = 0) N
0 T (        elif x.find\('+'\) != -1:           ) N
0 T (            table.dep.append\(c\)) N
0 T (            table.more.append\(c\)) N
0 T (        elif x.find\('-'\) != -1:           ) N
(610) # (            table.dep.append\(c\)) N
(CS573:Proj1e:Knn_XUE YANG) (Page 9/13) (Sep 22, 13 21:24) title
border
/v 1 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (            table.less.append\(c\)) p n
0 T (        elif x.find\('$'\) != -1:           ) N
0 T (            table.indep.append\(c\)) N
0 T (            table.num.append\(c\)) N
(615) # (        else:) N
0 T (            table.indep.append\(c\)) N
0 T (            table.term.append\(c\)) N
0 T (            isNum = 0) N
0 T (        table.n.append\('0'\)) N
(620) # (        if isNum:) N
0 T (            table.nump.append\(c\)) N
0 T (            table.hi.append\(-1.0*10**32\)) N
0 T (            table.lo.append\(10.0**32\)) N
0 T (            table.mu.append\(0\)) N
(625) # (            table.m2.append\(0\)) N
0 T (            table.sd.append\(0\)) N
0 T (        else:) N
0 T (            table.wordp.append\(c\)) N
0 T (            table.most.append\(0\)) N
(630) # (            table.count.append\({}\)) N
0 T (            table.mode.append\(''\)   ) N
0 T (        c += 1 ) N
0 T (    for i in range\(c\): table.data.append\([]\)     ) N
0 T (    ) N
(635) # (def addRow\(a, table\):) N
0 T (    "add a row of data to the table") N
0 T (    for c in range\(len\(table.name\)\):) N
0 T (        f = table.order[c]) N
0 T (        x = a[f]) N
(640) # (        table.data[c].append\(x\)) N
0 T (        if x.find\('?'\) == -1:) N
0 T (            table.n[c] = int\(table.n[c]\) + 1) N
0 T (            if c in table.wordp:) N
0 T (                k = table.wordp.index\(c\)) N
(645) # (                if table.count[k].has_key\(x\): table.count[k][x] += 1) N
0 T (                else: table.count[k][x] = 1) N
0 T (                new = table.count[k][x] ) N
0 T (                if new > table.most[k]:) N
0 T (                    table.mode[k] = x) N
(650) # (                    table.most[k] = new) N
0 T (            else:) N
0 T (                k = table.nump.index\(c\)) N
0 T (                if float\(x\) > float\(table.hi[k]\): table.hi[k] = x) N
0 T (                if float\(x\) < float\(table.lo[k]\): table.lo[k] = x) N
(655) # (                delta = float\(x\) - table.mu[k]) N
0 T (                table.mu[k] += delta/table.n[c]) N
0 T (                table.m2[k] += delta*\(float\(x\) - table.mu[k]\)) N
0 T (                if table.n[c] > 1:) N
0 T (                    table.sd[k] = \(table.m2[k]/\(table.n[c] - 1\)\)**0.5) N
(660) # (            c += 1 ) N
0 T (            ) N
0 T (def klasses\(table\):) N
0 T (    "generate a set of tables based on different classes") N
0 T (    if len\(table.klass\) == 0:) N
(665) # (        print "No labeled classes in the given data set") N
0 T (        return -1) N
0 T (    # assume there is only one class feature in the data set) N
0 T (    data = table.data[table.klass[0]]) N
0 T (    classnames = []) N
(670) # (    for s in data:) N
0 T (        if s not in classnames:) N
0 T (            classnames.append\(s\)) N
0 T (    tables = klass1\(table, classnames, data\)) N
0 T (    tables['0'] = table) N
(675) # (    tables['names'] = classnames) N
0 T (    return tables) N
0 T (    ) N
0 T (def klass1\(table, classnames, data\):) N
0 T (    tables = {}) N
(680) # (    for s in classnames:) N
0 T (        tables[s] = tablestr.Table\(\)) N
0 T (        makeTable\(table.name, tables[s]\)) N
0 T (        for i in range\(len\(data\)\):) N
(CS573:Proj1e:Knn_XUE YANG) (Page 10/13) (Sep 22, 13 21:24) title
border
grestore
(Printed by xue) rhead
(report.txt) (5/7) (Sunday September 22, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (11-12) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (            if s == data[i]:) p n
(685) # (                a = []) N
0 T (                for j in range\(len\(table.order\)\):) N
0 T (                    a.append\(table.data[j][i]\)) N
0 T (                addRow\(a, tables[s]\)) N
0 T (    return tables          ) N
(690) # (*************************************************************) N
0 T (File <tablestr.py>     ) N
0 T (    ) N
0 T (import lib ) N
0 T (class Table:) N
(695) # (    def __init__\(self\):) N
0 T (        self.data = []     #data[[col1,...],[col2,...]]) N
0 T (        self.name = []     #name of i-th column) N
0 T (        self.order = []    #order of the col) N
0 T (        self.nump = []     #is i-th column numeric?) N
(700) # (        self.wordp = []    #is i-th column non-numeric?) N
0 T (        self.indep = []    #list of indep columns) N
0 T (        self.dep = []      #list of dep columns) N
0 T (        self.less = []     #numeric goal to be minimized) N
0 T (        self.more = []     #numeric goal to be maximized) N
(705) # (        self.klass = []    #non-numeric goal) N
0 T (        self.term = []     #non-numeric non-goal) N
0 T (        self.num = []      #numeric non-goal) N
0 T (        # for all cols) N
0 T (        self.n = []        #count of things in this col) N
(710) # (        # for wordp columns:) N
0 T (        self.count = []    #count of each word) N
0 T (        self.mode = []     #most common word) N
0 T (        self.most = []     #count of most common word) N
0 T (        # for nump columns:) N
(715) # (        self.hi = []       #upper bound) N
0 T (        self.lo = []       #lower bound) N
0 T (        self.mu = []       #mean) N
0 T (        self.m2 = []       #sum of all nums) N
0 T (        self.sd = []       #standard deviation# -*- coding: utf-8 -*-) N
(720) # (        # table printing format) N
0 T (        self.CONVFMT = '%4.2f'  ) N
0 T (     ) N
0 T (def centroid\(table\):) N
0 T (    "update the mode and most values for wordp type cols or update the mean and ) N
0 T (sd values for nump cols") N
(725) # (    rows = [[],[]]) N
0 T (    for c in range\(len\(table.name\)\):) N
0 T (        s = table.mode[table.wordp.index\(c\)] if c in table.wordp else table.CONV) N
0 T (FMT%table.mu[table.nump.index\(c\)]) N
0 T (        rows[0].append\(str\(s\)\)) N
0 T (        if table.n[c] == '0':) N
(730) # (            s = 0.0) N
0 T (        else:) N
0 T (            s = float\(table.most[table.wordp.index\(c\)]\)/table.n[c] if c in table) N
0 T (.wordp else table.sd[table.nump.index\(c\)]) N
0 T (        rows[1].append\(str\(table.CONVFMT%s\)\)) N
0 T (    return rows) N
(735) # (        ) N
0 T (def tableprint\(table, stats=''\):) N
0 T (    "print table on the console") N
0 T (    print ' ') N
0 T (    if stats != '': table.CONVFMT = stats ) N
(740) # (    print\(' ' + lib.rowprint\(table.name\)+ '  # notes'.ljust\(10\)\)) N
0 T (    print\('#' + lib.rowprint\(centroid\(table\)[0]\) + '  # expected'.ljust\(10\)\)) N
0 T (    print\('#' + lib.rowprint\(centroid\(table\)[1]\) + '  # certainty'.ljust\(10\)\)   ) N
0 T ( ) N
0 T (    for j in range\(len\(table.data[0]\)\):) N
0 T (        line = []) N
(745) # (        for i in range\(len\(table.data\)\):) N
0 T (            line.append\(table.data[i][j]\)) N
0 T (        print\(' ' + lib.rowprint\(line\)+ '  #'.ljust\(10\)\)) N
0 T () N
0 T (def tableprint_txt\(table, f, stats=''\):) N
(750) # (    "print table on the indicated txt file with table name") N
0 T (    f.write\('\\n'\)) N
0 T (    #f.write\('\\n' +tablename + '\\n'*2\)) N
(CS573:Proj1e:Knn_XUE YANG) (Page 11/13) (Sep 22, 13 21:24) title
border
/v 1 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (    if stats != '': table.CONVFMT = stats ) p n
0 T (    f.write\(' ' + lib.rowprint\(table.name\)+ '  # notes'.ljust\(10\) + '\\n'\)) N
(755) # (    f.write\('#' + lib.rowprint\(centroid\(table\)[0]\) + '  # expected'.ljust\(10\) + ) N
0 T ('\\n'\)) N
0 T (    f.write\('#' + lib.rowprint\(centroid\(table\)[1]\) + '  # certainty'.ljust\(10\) +) N
0 T ( '\\n'\)    ) N
0 T (    for j in range\(len\(table.data[0]\)\):) N
0 T (        line = []) N
0 T (        for i in range\(len\(table.data\)\):) N
(760) # (            line.append\(table.data[i][j]\)) N
0 T (        f.write\(' ' + lib.rowprint\(line\)+ '  #'.ljust\(10\) + '\\n'\)) N
0 T (*************************************************************) N
0 T (File <xval.py>        ) N
0 T () N
(765) # (import lib ) N
0 T (import tablestr ) N
0 T (import reader ) N
0 T (import random) N
0 T () N
(770) # (def xvals\(tables, x, b\):) N
0 T (    k = tables['0'].order.index\(tables['0'].klass[0]\) ) N
0 T (    rows = lib.indexes\(tables['0'].data[k]\)) N
0 T (    s = int\(len\(rows\)/b\)) N
0 T (    xvaltables = {}) N
(775) # (    for i in range\(x\):      # x times) N
0 T (        random.shuffle\(rows\)) N
0 T (        for b1 in range\(b\): # b bins) N
0 T (            obj = xval\(b1*s, \(b1+1\)*s, rows, tables\)) N
0 T (            xvaltables[i*x+b1+1] = obj) N
(780) # (    return xvaltables) N
0 T (     ) N
0 T (       ) N
0 T (def xval\(start, stop, rows, tables\):) N
0 T (    testT = tablestr.Table\(\)) N
(785) # (    trainT = tablestr.Table\(\)) N
0 T (    reader.makeTable\(tables['0'].name, testT\)) N
0 T (    reader.makeTable\(tables['0'].name, trainT\)) N
0 T (    for r in range\(len\(rows\)\):) N
0 T (        d = rows[r]) N
(790) # (        a = []) N
0 T (        for j in range\(len\(tables['0'].order\)\):) N
0 T (            a.append\(tables['0'].data[j][d]\)        ) N
0 T (        if r >= start and r < stop: #belonging to testing data set) N
0 T (            reader.addRow\(a, testT\)) N
(795) # (        else:) N
0 T (            reader.addRow\(a, trainT\)) N
0 T (    testT = reader.klasses\(testT\)) N
0 T (    trainT = reader.klasses\(trainT\)) N
0 T (    tables = {}) N
(800) # (    tables['train'] = trainT) N
0 T (    tables['test'] = testT) N
0 T (    return tables) N
0 T (*************************************************************) N
0 T (File <main.py>         ) N
(805) # (    ) N
0 T (import reader) N
0 T (import tablestr) N
0 T (import zeror) N
0 T (import xval ) N
(810) # (import nb) N
0 T (import knn) N
0 T () N
0 T (if __name__ == "__main__":      ) N
0 T (    filename = 'data/diabetes.csv'   ) N
(815) # (    table = tablestr.Table\(\)             #create raw data structure) N
0 T (    reader.readcsv\(filename,table \)      #read the .csv data set) N
0 T (    f = '%4.2f'                          #set the formatting for the output ) N
0 T (    tables = reader.klasses\(table\)) N
0 T (    b = x = 2) N
(820) # (    kn = 5) N
0 T (    k = 1) N
0 T (    m = 2) N
0 T (    xvaltables = xval.xvals\(tables, x, b\)) N
(CS573:Proj1e:Knn_XUE YANG) (Page 12/13) (Sep 22, 13 21:24) title
border
grestore
(Printed by xue) rhead
(report.txt) (6/7) (Sunday September 22, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (13) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (    knn_acc = []) p n
(825) # (    nb_acc = []    ) N
0 T (    for s in range\(b*x\):) N
0 T (        s += 1) N
0 T (        acc = knn.knn\(xvaltables[s]['test'], xvaltables[s]['train'], tables, kn\)) N
0 T (        acc2 = nb.nb\(xvaltables[s]['test'], xvaltables[s]['train'], tables['name) N
0 T (s'], k, m\)        ) N
(830) # (        knn_acc += [f%acc]) N
0 T (        nb_acc += [f%acc2]) N
0 T (    print 'knn_acc =', knn_acc) N
0 T (    print 'nb_acc =', nb_acc) N
0 T () N
(835) # (         ) N
0 T (       ) N
(CS573:Proj1e:Knn_XUE YANG) (Page 13/13) (Sep 22, 13 21:24) title
border
grestore
(Printed by xue) rhead
(report.txt) (7/7) (Sunday September 22, 2013) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
